<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>